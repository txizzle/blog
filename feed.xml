<?xml version="1.0" encoding="UTF-8"?>
<feed xmlns="http://www.w3.org/2005/Atom" xml:lang="en">
<title type="text">Ted Xiao</title>
<generator uri="https://github.com/mojombo/jekyll">Jekyll</generator>
<link rel="self" type="application/atom+xml" href="http://txizzle.github.io/blog/feed.xml" />
<link rel="alternate" type="text/html" href="http://txizzle.github.io/blog" />
<updated>2016-07-03T23:43:08-07:00</updated>
<id>http://txizzle.github.io/blog/</id>
<author>
  <name>Ted Xiao</name>
  <uri>http://txizzle.github.io/blog/</uri>
  <email>t.xiao@berkeley.edu</email>
</author>


<entry>
  <title type="html"><![CDATA[Forestry Test]]></title>
 <link rel="alternate" type="text/html" href="http://txizzle.github.io/blog/forestry-test/" />
  <id>http://txizzle.github.io/blog/forestry-test</id>
  <published>2016-07-04T06:41:00-07:00</published>
  <updated>2016-07-04T06:41:00-07:00</updated>
  <author>
    <name>Ted Xiao</name>
    <uri>http://txizzle.github.io/blog</uri>
    <email>t.xiao@berkeley.edu</email>
  </author>
  <content type="html">
    &lt;p&gt;Testing out &lt;a href=&quot;https://forestry.io&quot;&gt;Forestry.io&lt;/a&gt;. CMS for Jekyll.. including this blog!? This post is a test.&lt;/p&gt;

    &lt;p&gt;&lt;a href=&quot;http://txizzle.github.io/blog/forestry-test/&quot;&gt;Forestry Test&lt;/a&gt; was originally published by Ted Xiao at &lt;a href=&quot;http://txizzle.github.io/blog&quot;&gt;Ted Xiao&lt;/a&gt; on July 04, 2016.&lt;/p&gt;
  </content>
</entry>


<entry>
  <title type="html"><![CDATA[Switching to a Jekyll Theme]]></title>
 <link rel="alternate" type="text/html" href="http://txizzle.github.io/blog/switching-to-a-jekyll-theme/" />
  <id>http://txizzle.github.io/blog/switching-to-a-jekyll-theme</id>
  <published>2016-04-11T17:49:20-07:00</published>
  <updated>2016-04-11T17:49:20-07:00</updated>
  <author>
    <name>Ted Xiao</name>
    <uri>http://txizzle.github.io/blog</uri>
    <email>t.xiao@berkeley.edu</email>
  </author>
  <content type="html">
    &lt;p&gt;This blog looks different! This post will just be a quick update on the style of this blog and my experiences with using a Jekyll template.&lt;/p&gt;

&lt;p&gt;Yep, I decided to go with the snazzy &lt;a href=&quot;https://github.com/mmistakes/hpstr-jekyll-theme&quot;&gt;HPSTR theme&lt;/a&gt; instead of further extending &lt;a href=&quot;https://github.com/barryclark/jekyll-now&quot;&gt;Jekyll Now&lt;/a&gt;. I had a good deal of fun customizing Jekyll Now, but I simply couldn’t pass up switching to a more aesthetically complete theme after I saw &lt;a href=&quot;https://panossakkos.github.io/personal-jekyll-theme/&quot;&gt;so&lt;/a&gt; very &lt;a href=&quot;http://qwtel.com/hydejack/&quot;&gt;many&lt;/a&gt; different &lt;a href=&quot;https://github.com/jamigibbs/phantom&quot;&gt;beautiful themes&lt;/a&gt;. One Product Hunt click led to another, and I ooh’d and ahh’d appropriately but one thing was common amongst the best themes: they packaged all the features I was looking for, directly &lt;em&gt;out of the box&lt;/em&gt;. With Jekyll Now, I’ve been making slow improvements through the HTML templates and looking through pull requests, but that simply doesn’t compare to something as sexy as &lt;a href=&quot;https://github.com/mmistakes/hpstr-jekyll-theme&quot;&gt;this&lt;/a&gt;. Huge shoutout to &lt;a href=&quot;https://twitter.com/mmistakes&quot;&gt;Michael Rose&lt;/a&gt; for creating the awesome HPSTR theme!&lt;/p&gt;

&lt;h1 id=&quot;from-this&quot;&gt;From this…&lt;/h1&gt;
&lt;figure&gt;
	&lt;a href=&quot;../old_blog&quot;&gt;&lt;img src=&quot;../images/old_blog.png&quot; alt=&quot;&quot; /&gt;&lt;/a&gt;
&lt;/figure&gt;
&lt;p&gt;I kept the old blog around &lt;a href=&quot;http://tedxiao.me/old_blog&quot;&gt;here&lt;/a&gt;.&lt;/p&gt;

&lt;h1 id=&quot;to-what-you-see&quot;&gt;To what you see!&lt;/h1&gt;
&lt;p&gt;And the good news is that it’s only going to get better! I can still customize this HPSTR theme and play with some features (such as displaying only excerpts on the front page). The great thing is that now I don’t &lt;strong&gt;have&lt;/strong&gt; to in order to have a beautiful, professional looking blog - which means hopefully more writing, less tinkering.&lt;/p&gt;

&lt;p&gt;Anyways, until next time - enjoy the new look! Same content, same posts, just presented in a much more HPSTR fashion.&lt;/p&gt;

&lt;p&gt;&lt;em&gt;Update: I tinkered a little and changed the front page to show excerpts instead of entire posts - very painlessly!.&lt;/em&gt;&lt;/p&gt;


    &lt;p&gt;&lt;a href=&quot;http://txizzle.github.io/blog/switching-to-a-jekyll-theme/&quot;&gt;Switching to a Jekyll Theme&lt;/a&gt; was originally published by Ted Xiao at &lt;a href=&quot;http://txizzle.github.io/blog&quot;&gt;Ted Xiao&lt;/a&gt; on April 11, 2016.&lt;/p&gt;
  </content>
</entry>


<entry>
  <title type="html"><![CDATA[adViz, Part 2&#58; The Tech]]></title>
 <link rel="alternate" type="text/html" href="http://txizzle.github.io/blog/Adviz-Part-2/" />
  <id>http://txizzle.github.io/blog/Adviz-Part-2</id>
  <updated>2016-1-21T00:00:00-00:00</updated>
  <published>2016-01-20T00:00:00-08:00</published>
  
  <author>
    <name>Ted Xiao</name>
    <uri>http://txizzle.github.io/blog</uri>
    <email>t.xiao@berkeley.edu</email>
  </author>
  <content type="html">
    &lt;p&gt;adViz was designed not as just a mobile app or a website, but as a comprehensive solution. The complete vision includes the iOS application, the web application, and the backend that integrates with existing police systems. For the MVP, I created the web application and skeleton UI for the iOS application.&lt;/p&gt;

&lt;figure class=&quot;half&quot;&gt;
	&lt;img src=&quot;../images/demo1.png&quot; alt=&quot;&quot; /&gt;
	&lt;img src=&quot;../images/adviz_features.png&quot; alt=&quot;&quot; /&gt;
	&lt;figcaption&gt;Components of the full solution. The MVP focussed on the web app.&lt;/figcaption&gt;
&lt;/figure&gt;

&lt;p&gt;As adViz may be developed further in the future, I won’t delve extremely deeply into the codebase. However, I’ll be pointing out key APIs, templates, and resources I found useful.&lt;/p&gt;

&lt;h2 id=&quot;the-tech-stack&quot;&gt;The Tech Stack&lt;/h2&gt;
&lt;p&gt;First and foremost, let’s talk tools. To build the MVP, I used to some extent the following:&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;&lt;a href=&quot;https://www.meteor.com/&quot;&gt;Meteor&lt;/a&gt; for UI, web server, data platform, and deployment&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;&amp;lt;http://iron-meteor.github.io/iron-router/&amp;gt;\&quot;&gt;Iron Router&lt;/a&gt; for routing&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;https://www.mongodb.com/&quot;&gt;MongoDB&lt;/a&gt; for database&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;http://getbootstrap.com/&quot;&gt;Bootstrap&lt;/a&gt; for UI&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;https://almsaeedstudio.com/AdminLTE&quot;&gt;AdminLTE&lt;/a&gt; for dashboard UI&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;https://github.com/aldeed/meteor-autoform&quot;&gt;Autoform&lt;/a&gt; for forms UI&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;https://www.twilio.com/&quot;&gt;Twilio&lt;/a&gt; for SMS&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;https://github.com/Schmavery/facebook-chat-api&quot;&gt;Facebook Chat API&lt;/a&gt; for FB Chat&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;https://atmospherejs.com/chart/chart&quot;&gt;Chart.js&lt;/a&gt; for data visualization&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;https://github.com/dburles/meteor-google-maps&quot;&gt;Google Maps&lt;/a&gt; for maps and navigation&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;www.ibm.com/smarterplanet/us/en/ibmwatson/&quot;&gt;IBM Watson&lt;/a&gt; for cognitive computing&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;www.heroku.com&quot;&gt;Heroku&lt;/a&gt; for deployment&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;I coded with Brackets.io, which I absolute love for front-end and full-stack work.&lt;/p&gt;

&lt;h2 id=&quot;dashboard-ui&quot;&gt;Dashboard UI&lt;/h2&gt;
&lt;p&gt;I used AdminLTE and customized multiple aspects to ‘meteor-ize’ it. It was my first time working with Meteor on a significantly large project, so I had to refactor many components and turn them into templates. Unfortunately, I did not find available Meteor Dashboard templates sufficient, which is why I had to go this route and port over a pure HTML/CSS dashboard template.&lt;/p&gt;

&lt;h2 id=&quot;multi-platform-alerts&quot;&gt;Multi-platform Alerts&lt;/h2&gt;
&lt;p&gt;For the MVP, I implemented Facebook and SMS alert messages, and sketched out how Twitter alerts would work.&lt;/p&gt;

&lt;figure&gt;
	&lt;a href=&quot;../old_blog&quot;&gt;&lt;img src=&quot;../images/ss_alerts.png&quot; alt=&quot;&quot; /&gt;&lt;/a&gt;
&lt;/figure&gt;

&lt;p&gt;Facebook messages are actually a bit tricky to implement, as Facebook &lt;a href=&quot;https://github.com/Schmavery/facebook-chat-api&quot;&gt;removed&lt;/a&gt; the official Chat API service two years ago. The workaround was to use the &lt;a href=&quot;https://developers.facebook.com/docs/chat&quot;&gt;unofficial NPM Facebook chat package&lt;/a&gt; and port it over to Meteor. &lt;em&gt;Update: Meteor 1.3 supports using &lt;code class=&quot;highlighter-rouge&quot;&gt;npm install&lt;/code&gt; directly, which is awesome!&lt;/em&gt;&lt;/p&gt;

&lt;p&gt;SMS messages were easy to hook up with Twilio. My team was able to receive $500 in credit from Twilio, which made developing painless and fun. Thanks Twilio!&lt;/p&gt;

&lt;h2 id=&quot;cognitive-computing&quot;&gt;Cognitive Computing&lt;/h2&gt;
&lt;p&gt;Using &lt;a href=&quot;www.ibm.com/smarterplanet/us/en/ibmwatson/&quot;&gt;IBM Watson&lt;/a&gt;’s Dialogue, Tradeoff Analytics, and Text-to-Speech, our MVP was able to leverage some of IBM’s latest cognitive computing technologies. The dialogue API is used in conversations between civilians and the police, to create a personalized experience to direct civilians to the right parties while saving costs for the police. The messaging endpoints were hooked up to messages hosted on the web application, but can definitely be extended to other platforms in the future.&lt;/p&gt;

&lt;h2 id=&quot;data-visualization&quot;&gt;Data Visualization&lt;/h2&gt;
&lt;p&gt;Using &lt;a href=&quot;https://atmospherejs.com/chart/chart&quot;&gt;Chart.js&lt;/a&gt;’s Meteor package, I created an analytics dashboard on data supplied to us by the Vizag Police Department. While the data was by no means comprehensive, I believe that the initial dashboard shows information in a way that is intuitive yet detailed.&lt;/p&gt;

&lt;figure&gt;
	&lt;a href=&quot;../old_blog&quot;&gt;&lt;img src=&quot;../images/ss_trends.png&quot; alt=&quot;&quot; /&gt;&lt;/a&gt;
&lt;/figure&gt;

&lt;p&gt;Perhaps more importantly, Google Maps enabled us to crime information on a map. For civilians that may care about understanding a graph, a map of their neighborhood is much more accessible. From local crime data to city-wide trends, the crime maps are able to provide information at the scope needed.&lt;/p&gt;

&lt;figure&gt;
	&lt;a href=&quot;../old_blog&quot;&gt;&lt;img src=&quot;../images/ss_map.png&quot; alt=&quot;&quot; /&gt;&lt;/a&gt;
&lt;/figure&gt;

&lt;h2 id=&quot;safe-navigation&quot;&gt;Safe Navigation&lt;/h2&gt;
&lt;p&gt;Finally, one of the cornerstones of our pitch: safe navigation. While web-based navigation was not implemented for the MVP, the native IOS application utilized the Google Maps navigation API. As intermediate endpoints are not supported, we calculated many possible routes and stitched them together, balancing transit time and safety.&lt;/p&gt;

&lt;h2 id=&quot;my-development-experience&quot;&gt;My Development Experience&lt;/h2&gt;
&lt;p&gt;Wow, that’s more technologies than I remember working with! Seems like quite a lot when I list them all out. Let’s talk about how smoothly the experience went working with all these pieces.&lt;/p&gt;

&lt;p&gt;First and foremost, I’d have to say that working with Meteor was great. I’ve previously worked with Ruby on Rails, and transitioning was surprisingly easy. Many of the packages (I’m looking at you, Admin Dashboards) were a struggle to work with, and I ended up just starting from scratch for many components.&lt;/p&gt;

&lt;p&gt;The easiest APIs to work with were probably Twilio and Google Maps. IBM Watson and the Facebook Chat Package were not too bad, but definitely required a bit more work.&lt;/p&gt;

&lt;p&gt;Front-end wise, I utilized Bootstrap and the AdminLTE template heavily. I started off trying to making everything from scratch, but I quickly realized that there was no way I would be able to build out all the cool features I wanted while making everything look sleek and professional. A few (relatively) short tweaks later, and I was able to personalize the dashboard to look and function pretty great!&lt;/p&gt;

&lt;p&gt;Feel free to check out the adViz demo. Some features have been disabled, but most of the MVP is turned on:&lt;/p&gt;

&lt;p&gt;&lt;a href=&quot;http://getadviz.herokuapp.com&quot; class=&quot;btn btn-info&quot;&gt;adViz Demo&lt;/a&gt;&lt;/p&gt;


    &lt;p&gt;&lt;a href=&quot;http://txizzle.github.io/blog/Adviz-Part-2/&quot;&gt;adViz, Part 2&amp;#58; The Tech&lt;/a&gt; was originally published by Ted Xiao at &lt;a href=&quot;http://txizzle.github.io/blog&quot;&gt;Ted Xiao&lt;/a&gt; on January 20, 2016.&lt;/p&gt;
  </content>
</entry>


<entry>
  <title type="html"><![CDATA[adViz, Part 1&#58; Building My First MVP]]></title>
 <link rel="alternate" type="text/html" href="http://txizzle.github.io/blog/Adviz-Part-1/" />
  <id>http://txizzle.github.io/blog/Adviz-Part-1</id>
  <updated>2016-1-14T00:00:00-00:00</updated>
  <published>2016-01-14T00:00:00-08:00</published>
  
  <author>
    <name>Ted Xiao</name>
    <uri>http://txizzle.github.io/blog</uri>
    <email>t.xiao@berkeley.edu</email>
  </author>
  <content type="html">
    &lt;p&gt;I’ve built an a MVP as part of a startup I’m working on that has expanded out of a course project, and it has been quite the ride. In these posts, I’ll write about the ideas, the tech, the journey - and more.&lt;/p&gt;

&lt;p&gt;If you asked 10 people what the word “startup” means, you’d probably get just as many different definitions. To many college students, it could mean “an extensive tech project that I’ve spent very significant time on and can see being something more”. And isn’t that really the same thing as a pre-funding startup?&lt;/p&gt;

&lt;p&gt;So when people ask me what I’ve been up to, instead of responding with a confusing mouthful about a class project idea that evolved, I just reply with “working on my startup”. I guess I’m a cool kid now!&lt;/p&gt;

&lt;h1 id=&quot;meet-adviz&quot;&gt;Meet adViz!&lt;/h1&gt;
&lt;p&gt;These last few months, I’ve spent a significant amount of time working on a side project called &lt;strong&gt;adViz&lt;/strong&gt;. The core idea is simple: adViz seeks to add &lt;em&gt;an intelligent security layer to your daily life&lt;/em&gt;.&lt;/p&gt;

&lt;p&gt;This idea stemmed out of a course I took last semester: IEOR185, Building Smart Cities Leveraging Open Innovation. As part of the course, I developed a technical solution (adViz) with a feasible business model. This solution centered around making Visakhapatnam (one of the &lt;a href=&quot;http://timesofindia.indiatimes.com/india/3-US-India-teams-to-draft-plan-for-3-smart-cities/articleshow/46036760.cms&quot;&gt;three smart cities&lt;/a&gt; under development by joint India-US teams) smart.&lt;/p&gt;

&lt;p&gt;Safety and security in your daily life is mostly influenced by things going on behind the scenes, with solutions that don’t function effectively and impactfully. In India, the situation is even worse; our solution targets &lt;a href=&quot;https://en.wikipedia.org/wiki/Visakhapatnam&quot;&gt;Visakhapatnam&lt;/a&gt;, a growing port city in Southeast India.&lt;/p&gt;

&lt;p&gt;From safe navigation to modern crime alerts to an improved relationship with police departments, adViz seeks to harness the power of data to make an impact.&lt;/p&gt;

&lt;h2 id=&quot;the-painpoints&quot;&gt;The Painpoints&lt;/h2&gt;

&lt;h3 id=&quot;navigation&quot;&gt;Navigation&lt;/h3&gt;
&lt;p&gt;Currently, apps such as Google Maps or Waze can direct us the fastest route or shortest route, but not the safest route. Recently, a woman in Brazil using Waze was actually directed to the wrong address and &lt;a href=&quot;http://edition.cnn.com/2015/10/05/americas/brazil-wrong-directions-death/&quot;&gt;killed&lt;/a&gt;.&lt;/p&gt;

&lt;h3 id=&quot;civilian-communication&quot;&gt;Civilian Communication&lt;/h3&gt;
&lt;p&gt;Police departments around the world are slow to adapt to fast-paced technological innovation. Current succesful solutions (such as &lt;a href=&quot;http://www.amberalert.gov/&quot;&gt;Amber Alert&lt;/a&gt;) can be made even better by applying best practices and technical features from Silicon Valley.&lt;/p&gt;

&lt;h3 id=&quot;corruption&quot;&gt;Corruption&lt;/h3&gt;
&lt;p&gt;India has had unfortunate records with rampant corruption. Any solution that addresses safety should seek to rebuild trust between citizens and the police establishment.&lt;/p&gt;

&lt;p&gt;It’s been a crazy but rewarding journey that’s taken me through countless pivots and pitches, all the way from Berkeley, CA to Visakhapatnam, India. In the next few blog entries, I’ll write about some fun experiences and takeaways I’ve learned on this journey.&lt;/p&gt;

&lt;h2 id=&quot;the-solution&quot;&gt;The Solution&lt;/h2&gt;
&lt;p&gt;AdViz is an end-to-end solution that makes users safer 24/7. After countless pivots and iterations, adViz boiled down to:&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;Safe Navigation: Incorporating historic, crowdsourced, and police data&lt;/li&gt;
  &lt;li&gt;Crime Reporting: Transparent, logged crime reports (many paper crime reports are ignored)&lt;/li&gt;
  &lt;li&gt;Multi-platform: Crime alerts for the 21st century, not just SMS&lt;/li&gt;
  &lt;li&gt;Data Dashboard: Allowing civilians to visualize and understand their environment&lt;/li&gt;
  &lt;li&gt;Augment Existing Solutions: Work with the technology currently in place. This means complementing pieces with a holistic solution.&lt;/li&gt;
&lt;/ul&gt;

&lt;h1 id=&quot;my-role&quot;&gt;My Role&lt;/h1&gt;
&lt;p&gt;As this was my first interdisciplinary project-based class, I wasn’t sure how our team structure would fall into place.&lt;/p&gt;

&lt;p&gt;Over the course of a few weeks, I gradually grew into the role of a Product Manager / Lead Engineer, and was able to leverage many of my previous experience in consulting and software development. From early on, it was clear that our team was composed of a many different experience levels, interests, and motivation; this has definitely been a huge challenge, but I believe I’ve grown all the more for it. It’s been a very enlightening experience being in a position of leadership while having no direct authority. By writing a majority of the codebase, directing strategic direction, and executing the pitches, I’ve definitely learned a lot.&lt;/p&gt;

&lt;h1 id=&quot;what-ill-write-about&quot;&gt;What I’ll Write About&lt;/h1&gt;
&lt;p&gt;So much stuff has happened on this hectic journey that it’s hard for me to cram all of it into a single post. I’m going to split up my reflections into four parts:&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;Part 1: Overview [This Entry]&lt;/li&gt;
  &lt;li&gt;Part 2: adViz, The Tech&lt;/li&gt;
  &lt;li&gt;Part 3: adViz, The Pitches&lt;/li&gt;
&lt;/ul&gt;

&lt;h1 id=&quot;see-you-next-installment&quot;&gt;See you next installment!&lt;/h1&gt;
&lt;p&gt;I’m currently in Hyderabad, India, waiting for my flight to Hong Kong, where I’ll be spending 3 days. Look for an upcoming reflection on Hong Kong, which I’m confident will be as different from India as India was from California. Until next time!&lt;/p&gt;


    &lt;p&gt;&lt;a href=&quot;http://txizzle.github.io/blog/Adviz-Part-1/&quot;&gt;adViz, Part 1&amp;#58; Building My First MVP&lt;/a&gt; was originally published by Ted Xiao at &lt;a href=&quot;http://txizzle.github.io/blog&quot;&gt;Ted Xiao&lt;/a&gt; on January 14, 2016.&lt;/p&gt;
  </content>
</entry>


<entry>
  <title type="html"><![CDATA[The Hunt&#58; The 2015 Internship Journey]]></title>
 <link rel="alternate" type="text/html" href="http://txizzle.github.io/blog/Internship-Overview/" />
  <id>http://txizzle.github.io/blog/Internship-Overview</id>
  <published>2015-12-19T00:00:00-08:00</published>
  <updated>2015-12-19T00:00:00-08:00</updated>
  <author>
    <name>Ted Xiao</name>
    <uri>http://txizzle.github.io/blog</uri>
    <email>t.xiao@berkeley.edu</email>
  </author>
  <content type="html">
    &lt;p&gt;This year, like many third-year students, I’ve looked exhaustively for “the one” internship that’s supposed to crown your junior year or even your college experience in general. It’s been an arduous grind, but 21 interviews later, I’ve signed with Amazon to spend my 2016 Summer as a Software Development Engineer Intern. I’ve learned so much in this process, and I think some of my takeaways will be useful for others.&lt;/p&gt;

&lt;h2 id=&quot;the-numbers&quot;&gt;The Numbers&lt;/h2&gt;
&lt;p&gt;Over the course of 83 days, I participated in 21 interviews.&lt;/p&gt;

&lt;ol&gt;
  &lt;li&gt;Product Management Internships:
    &lt;ol&gt;
      &lt;li&gt;Workday*: 3 phone screens. &lt;strong&gt;Received offer.&lt;/strong&gt;&lt;/li&gt;
      &lt;li&gt;Google: 1 phone screen, 2 onsite.&lt;/li&gt;
    &lt;/ol&gt;
  &lt;/li&gt;
  &lt;li&gt;Software Engineering Internships:
    &lt;ol&gt;
      &lt;li&gt;PDT Partners: 3 on campus, 1 phone screen.&lt;/li&gt;
      &lt;li&gt;Ebay: 1 coding screen.&lt;/li&gt;
      &lt;li&gt;Google: 3 phone screens. &lt;strong&gt;Host matching&lt;/strong&gt;. Declined host matching interview.&lt;/li&gt;
      &lt;li&gt;Bloomberg: 1 phone screen.&lt;/li&gt;
      &lt;li&gt;Tableau*: 3 phone screens. &lt;strong&gt;Received offer&lt;/strong&gt;.&lt;/li&gt;
      &lt;li&gt;Salesforce: 1 phone screen. Declined onsite.&lt;/li&gt;
      &lt;li&gt;Amazon*: 2 on campus. &lt;strong&gt;Received offer&lt;/strong&gt;.&lt;/li&gt;
    &lt;/ol&gt;
  &lt;/li&gt;
&lt;/ol&gt;

&lt;p&gt;I was rejected after the resume screen for 5 companies.&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;Dropbox*&lt;/li&gt;
  &lt;li&gt;Uber&lt;/li&gt;
  &lt;li&gt;Lyft&lt;/li&gt;
  &lt;li&gt;Palantir&lt;/li&gt;
  &lt;li&gt;Two Sigma&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;*I had referrals for these companies.&lt;/p&gt;

&lt;h2 id=&quot;the-trends&quot;&gt;The Trends&lt;/h2&gt;
&lt;p&gt;&lt;em&gt;Referrals really work&lt;/em&gt;.&lt;br /&gt;
For the 4 companies I had referalls for, I received 3 offers.  Coincidence? I think not! Dropbox was definitely an outlier, but more on that shortly.&lt;/p&gt;

&lt;p&gt;&lt;em&gt;Honesty helps you&lt;/em&gt;.&lt;br /&gt;
In 3 different interviews, I was asked questions I had seen before. Instead of pretending to initially struggle and then miraculously solve the question, I opted to just say that I had seen the question before and then offer a brief analysis of the correct solution. I found that strangely enough, the reception to my candor was not just friendly, but actually &lt;em&gt;bonding&lt;/em&gt;. I know that’s a strange word to use, but I can’t think of a better word to describe the exchange: the interviewers shrugs, commends you for your honesty, and maybe jokes about the difficulty in selecting good, unique interview questions. Talk about a confidence boost!&lt;/p&gt;

&lt;h2 id=&quot;the-takeaways&quot;&gt;The Takeaways&lt;/h2&gt;
&lt;p&gt;In most of my interviews, I immediately asked for feedback in the form of a fairly leading question: “Is there anything that I’ve said today that’s given you cause for concern or that I can clarify?”&lt;/p&gt;

&lt;p&gt;I’m not convinced that this is a good strategy to use, as I’ve had mixed results. Some responses have been generic and actually noticebly negatively altered the closing tone of the conversation, but some responses have been useful. I’ll paraphrase some of the good stuff and add my own insight. In addition, I was able to speak with a Dropbox engineer after my rejection from the resume screen; some of his feedback may be of interest to you as well.&lt;/p&gt;

&lt;p&gt;For PM:&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;Separate opinion and fact. Be very clear on what you are hypothesizing or pitching, because bullshit without facts to back it up is just… bullshit.&lt;/li&gt;
  &lt;li&gt;Balance your tech self and analytical self with the user. Don’t tunnel vision into market sizing and fancy sounding trends! You can &lt;em&gt;never&lt;/em&gt; focus too hard on the end user.&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;For SE:&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;Resume-wise, many top tier companies are looking for:
    &lt;ul&gt;
      &lt;li&gt;A “strong internship” at another top tier company (Facebook, Google, etc.)&lt;/li&gt;
      &lt;li&gt;A significant project, which means many many Github stars or thousands of users&lt;/li&gt;
      &lt;li&gt;Stellar performance in the hardest CS classes your university offers&lt;/li&gt;
    &lt;/ul&gt;
  &lt;/li&gt;
  &lt;li&gt;Figure out what type interviewing-style your interview likes. If they want to lead and tell you exactly which steps you should do (Make a class and explain it to me. Now make a signature… etc.), let them lead. If they let you do your own thing, be proactive.&lt;/li&gt;
  &lt;li&gt;If you find yourself rambling or your interviewer’s tone changes, regroup. Fail fast and cut your losses! When you spend 10 minutes of straight talking on a simple question and then your interviewer chastises you and provides a very simple solution, you’ve probably lost that interview then and there. It’s better to check in a few minutes into your monologue to make sure the house isn’t on fire.&lt;/li&gt;
  &lt;li&gt;Think about optimal run times. If you have a ‘dumb’ solution but the space and time complexities match the optimal ones, maybe your ‘dumb’ solution isn’t so dumb after all. Fit the solution to the scope of the problem!&lt;/li&gt;
&lt;/ul&gt;

&lt;h2 id=&quot;tldr&quot;&gt;tl;dr&lt;/h2&gt;

&lt;ul&gt;
  &lt;li&gt;Get referrals.&lt;/li&gt;
  &lt;li&gt;Be honest.&lt;/li&gt;
  &lt;li&gt;Draw a clear line between your BS and your knowledge.&lt;/li&gt;
  &lt;li&gt;Read your interviewer.&lt;/li&gt;
  &lt;li&gt;Fit the solution to the problem.&lt;/li&gt;
&lt;/ul&gt;

&lt;h2 id=&quot;bonus-why-software-engineering&quot;&gt;Bonus: Why Software Engineering?&lt;/h2&gt;
&lt;p&gt;I’ve heard numerous EECS students at Cal note that UC Berkeley EECS culture is very heavily biased towards feeding into Silicon Valley Software Engineering (compared to Stanford or MIT). I’m not sure of the atmosphere at other universities, but I’ve definitely felt the pressure from what feels like a vast majority of EECS students eagerly following the “script” (mapped out beautifully in my friend’s &lt;a href=&quot;https://medium.com/@qrazhan/cs-internship-recruiting-guide-aebb68912808#.cwy231wr5&quot;&gt;article&lt;/a&gt;): mid-size or small companies Freshman and Sophomore year, a large big-name company Junior year, with the sole goal of working as a Software Engineer immediately after graudation. Many students take almost identical courses without venturing far off the beaten path. We’ll all find particular areas we’re interested in, but Software Engineering is always a very safe default. But that’s not necessarily a bad thing - the boatloads of cash, great perks, and a developer-centric culture are amenities unheard of in many other career paths. However, I’m not enthused that most students choose this path, and I wish that there was a more diverse array of opportunites that are actively persued in larger volumes.&lt;/p&gt;

&lt;p&gt;However, in the meantime, I do recognize the flexibility of Software Engineering. I’m not sure at all that I want to be a Software Engineer full-time for an extended amount of time, but I believe the skills I’ll learn as a Software Engineer are invaluable wherever I go. Do I feel mildly pidgeonholed into Software Engineering? Absolutely! Is this a bad thing? Maybe not. I want to be a Data Scientist, I want to found a startup, I want to be a PM… but the skills I’ll learn this summer will help me regardless of where I’m heading in the next few years.&lt;/p&gt;

&lt;h2 id=&quot;thanks-for-reading&quot;&gt;Thanks for reading!&lt;/h2&gt;
&lt;p&gt;I hope you enjoyed learning about my experience this recruiting season - I know I enjoyed writing about it. Feel free to shoot me a message with your thoughts!&lt;/p&gt;

&lt;p&gt;It’s been an exhausting, exciting job-hunt, but I’m glad to have learned so much about the process, the companies, and myself. I’m excited to learn, create, and grow this summer at &lt;a href=&quot;http://www.amazon.com/&quot;&gt;Earth’s most customer-centric company&lt;/a&gt;.&lt;/p&gt;


    &lt;p&gt;&lt;a href=&quot;http://txizzle.github.io/blog/Internship-Overview/&quot;&gt;The Hunt&amp;#58; The 2015 Internship Journey&lt;/a&gt; was originally published by Ted Xiao at &lt;a href=&quot;http://txizzle.github.io/blog&quot;&gt;Ted Xiao&lt;/a&gt; on December 19, 2015.&lt;/p&gt;
  </content>
</entry>


<entry>
  <title type="html"><![CDATA[Adding Tags to Jekyll Now]]></title>
 <link rel="alternate" type="text/html" href="http://txizzle.github.io/blog/Blog-Tags/" />
  <id>http://txizzle.github.io/blog/Blog-Tags</id>
  <published>2015-11-14T00:00:00-08:00</published>
  <updated>2015-11-14T00:00:00-08:00</updated>
  <author>
    <name>Ted Xiao</name>
    <uri>http://txizzle.github.io/blog</uri>
    <email>t.xiao@berkeley.edu</email>
  </author>
  <content type="html">
    &lt;p&gt;I thought I’d start off by writing about something fresh in my mind: the technical aspects of this blog! I’ve decided to use a static page blog using &lt;a href=&quot;https://jekyllrb.com/&quot;&gt;Jekyll&lt;/a&gt; and hosted by Github. In addition, I’m using a out-of-the-box solution called &lt;a href=&quot;https://github.com/barryclark/jekyll-now&quot;&gt;jekyll-now&lt;/a&gt;. I’ve chosen Jekyll for a variety reasons, but the main ones are:&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;
    &lt;p&gt;Jekyll is &lt;strong&gt;very customizable&lt;/strong&gt;. Jekyll is simple to use, which makes it easy for me to build with it.&lt;/p&gt;
  &lt;/li&gt;
  &lt;li&gt;
    &lt;p&gt;Jekyll is &lt;strong&gt;fast&lt;/strong&gt;. The generated static sites should be served much quicker than dyanmic sites like Wordpress.&lt;/p&gt;
  &lt;/li&gt;
  &lt;li&gt;
    &lt;p&gt;I have lots of &lt;strong&gt;ownership&lt;/strong&gt;. I see the code for the entire solution, so I know or can learn how things happen.&lt;/p&gt;
  &lt;/li&gt;
  &lt;li&gt;
    &lt;p&gt;&lt;strong&gt;Easy Github integration&lt;/strong&gt;. My personal website is hosted through Github Pages, so adding a Jekyll blog to it is super simple if I also host with Github.&lt;/p&gt;
  &lt;/li&gt;
  &lt;li&gt;
    &lt;p&gt;Last but not least, I &lt;strong&gt;feel like a ‘hacker’&lt;/strong&gt;. Rich text editors? Psh, I’ll be learning Markdown.&lt;/p&gt;
  &lt;/li&gt;
&lt;/ul&gt;

&lt;h2 id=&quot;thoughts-on-the-current-layout&quot;&gt;Thoughts on the Current Layout&lt;/h2&gt;
&lt;p&gt;So after following Barry Clark’s great jekyll-now &lt;a href=&quot;http://www.smashingmagazine.com/2014/08/build-blog-jekyll-github-pages/&quot;&gt;tutorial&lt;/a&gt;, I really liked what I saw. The layout is minimal, elegant, and beautiful. There is a main feed that shows you a list of blog posts with a sizeable snippet to allow readers to the first portions of the posts.&lt;/p&gt;

&lt;h2 id=&quot;adding-tags&quot;&gt;Adding Tags&lt;/h2&gt;
&lt;p&gt;One feature that I didn’t see was tagging. I decided to follow Theby’s jekyll-now &lt;a href=&quot;https://github.com/barryclark/jekyll-now/pull/205&quot;&gt;branch&lt;/a&gt;, which adds a tagging feature in. It takes tag indices from posts and generates corresponding pages (a page for each tag, a list of tags on each poss) for those tags. For example, for this post I added &lt;code class=&quot;highlighter-rouge&quot;&gt;tags: [code, github, jekyll, jekyll-now, tagging]&lt;/code&gt; to generate these tags.&lt;/p&gt;

&lt;h2 id=&quot;problems-on-live-version&quot;&gt;Problems on Live Version&lt;/h2&gt;
&lt;p&gt;Theby’s code worked great for sites without a &lt;code class=&quot;highlighter-rouge&quot;&gt;base_url&lt;/code&gt; (sites without a &lt;code class=&quot;highlighter-rouge&quot;&gt;base_url&lt;/code&gt; are assumed to just be hosted at username.github.io.), but for my blog, I’m hosting it at &lt;code class=&quot;highlighter-rouge&quot;&gt;http://txizzle.github.io/blog&lt;/code&gt; because my blog is a separate project repository being pushed through Github’s &lt;a href=&quot;https://help.github.com/articles/creating-project-pages-manually/&quot;&gt;project pages&lt;/a&gt;. I changed some of the tag-generation links in Thelby’s branch:&lt;/p&gt;

&lt;p&gt;I basically replaced all &lt;code class=&quot;highlighter-rouge&quot;&gt;&amp;lt;a href=&quot;/tag/&quot;&amp;gt; &amp;lt;/a&amp;gt;&lt;/code&gt; into &lt;code class=&quot;highlighter-rouge&quot;&gt;&amp;lt;a href=&quot;/tag/&quot;&amp;gt;&lt;/code&gt;. Not too much of a change! I’m just changing some &lt;code class=&quot;highlighter-rouge&quot;&gt;href&lt;/code&gt; links, a fairly semantic change. This change allowed my blog to work locally; clicking tag links works for every location tag links appear (on posts, on the main page, and on the tag feeds).&lt;/p&gt;

&lt;p&gt;&lt;del&gt;However, the tags have not worked when I’ve pushed my blog online! If you try clicking the tags above this post, you’ll get a 404 Error. Why is this happening? I’m not certain. It may be that the tag generation code is not working, so the &lt;code class=&quot;highlighter-rouge&quot;&gt;tag_index&lt;/code&gt; pages are just never generated. I don’t know if this is the case, because the  &lt;code class=&quot;highlighter-rouge&quot;&gt;&amp;lt;a href&amp;gt;&lt;/code&gt; html links still redirect to the URL that I expect. There’s just nothing there. Anyways, I’ve &lt;a href=&quot;https://github.com/barryclark/jekyll-now/pull/205&quot;&gt;asked&lt;/a&gt; Theby what’s up, and will update with anything I find. Keep posted ‘til next time! This blog will look great(er) in no time.&lt;/del&gt;&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Update&lt;/strong&gt;: It turns out the issue is that Github does not run Ruby plugins (how I’m generating the tags) when you push to Github Pages! Charlie Park had a great &lt;a href=&quot;http://charliepark.org/jekyll-with-plugins/&quot;&gt;article&lt;/a&gt; on how to work around this. Essentially, I generate the site locally, and push the generated files directly onto Github (as opposed to having Github both generate and serve the files). Cool! Tags work now. I’ll make them more aesthetically pleasing when I customize this blog more.&lt;/p&gt;


    &lt;p&gt;&lt;a href=&quot;http://txizzle.github.io/blog/Blog-Tags/&quot;&gt;Adding Tags to Jekyll Now&lt;/a&gt; was originally published by Ted Xiao at &lt;a href=&quot;http://txizzle.github.io/blog&quot;&gt;Ted Xiao&lt;/a&gt; on November 14, 2015.&lt;/p&gt;
  </content>
</entry>


<entry>
  <title type="html"><![CDATA[Hello World]]></title>
 <link rel="alternate" type="text/html" href="http://txizzle.github.io/blog/Hello-World/" />
  <id>http://txizzle.github.io/blog/Hello-World</id>
  <published>2015-11-13T00:00:00-08:00</published>
  <updated>2015-11-13T00:00:00-08:00</updated>
  <author>
    <name>Ted Xiao</name>
    <uri>http://txizzle.github.io/blog</uri>
    <email>t.xiao@berkeley.edu</email>
  </author>
  <content type="html">
    &lt;p&gt;Hello! I’ve decided to finally creating a blog after kicking around the idea
for a while. I’ve chosen to use Jekyll and host with Github; we’ll see how well
this works. I’m still learning Markdown and how to masterfully customize Jekyll,
 but am liking what I see so far! I’ll hopefully be posting on a semi-regular
 basis about everything from software development to random projects to new
 tidbits that I think will be interesting or useful.&lt;/p&gt;

&lt;p&gt;So without further ado, here it is:&lt;/p&gt;

&lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;print(&quot;Hello World!&quot;)
&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;

&lt;p&gt;I’m looking forward to sharing new things I learn!&lt;/p&gt;

    &lt;p&gt;&lt;a href=&quot;http://txizzle.github.io/blog/Hello-World/&quot;&gt;Hello World&lt;/a&gt; was originally published by Ted Xiao at &lt;a href=&quot;http://txizzle.github.io/blog&quot;&gt;Ted Xiao&lt;/a&gt; on November 13, 2015.&lt;/p&gt;
  </content>
</entry>

</feed>
